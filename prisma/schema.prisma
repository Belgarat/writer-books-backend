generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model blogs {
  id         Int      @id
  title      String?  @db.VarChar(255)
  subtitle   String?  @db.Text
  body       String?  @db.Text
  image_url  String?  @db.VarChar(255)
  user_id    Int?
  tag        String?  @db.Text
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @db.Timestamp(0)
}

model comments {
  id         Int      @id
  name       String?  @db.VarChar(255)
  email      String?  @db.VarChar(255)
  body       String?  @db.Text
  blog_id    Int?
  user_id    Int?
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @db.Timestamp(0)

  @@index([blog_id], map: "blog_id")
  @@index([user_id], map: "user_id")
}

model pg {
  id          Int      @id @default(autoincrement())
  storiesId   Int
  nome        String   @db.VarChar(255)
  cognome     String   @db.VarChar(255)
  origine     String   @db.VarChar(255)
  descrizione String   @db.Text
  background  String   @db.Text
  imageUrl    String   @db.VarChar(1024)
  dtCreated   DateTime @default(now()) @db.Timestamp(0)
  dtModified  DateTime @default(now()) @db.Timestamp(0)

  @@index([storiesId], map: "idx_stories_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model schema_migrations {
  version String @db.VarChar(255)

  @@ignore
}

model statuses {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  description String?   @db.Text
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime? @updatedAt
}

model stories {
  id              Int       @id @default(autoincrement())
  title           String?   @db.Text
  description     String?   @db.Text
  user_id         Int?
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime? @updatedAt
  storychapter_id Int?

  @@index([user_id], map: "index_stories_on_user_id")
}

model storychapters {
  id         Int       @id @default(autoincrement())
  title      String?   @db.VarChar(255)
  body       String?   @db.LongText
  story_id   Int?
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @updatedAt
  status_id  Int?      @default(1)
  abstract   String?   @db.Text
  imageUrl   String?   @unique(map: "idxImageUrl") @db.VarChar(255)
}

model users {
  id              Int       @id @default(autoincrement())
  username        String?   @db.VarChar(255)
  password_digest String?   @db.VarChar(255)
  email           String?   @db.VarChar(255)
  created_at      DateTime  @default(now()) @db.Timestamp(0)
  updated_at      DateTime  @updatedAt
  role            String?   @default("user") @db.VarChar(255)
  active_at       DateTime? @db.DateTime(0)
  online          Int?      @default(0)
}
